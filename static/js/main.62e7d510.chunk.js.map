{"version":3,"sources":["components/ScatterPlotComponent.jsx","App.js","index.js"],"names":["ScatterPlotComponent","data","setData","useState","fileName","setFileName","fileInputStyles","container","marginBottom","display","justifyContent","label","padding","backgroundColor","color","borderRadius","cursor","transition","textAlign","boxShadow","input","marginTop","fontSize","React","createElement","style","type","accept","onChange","event","file","target","files","name","reader","FileReader","onload","e","Papa","parse","result","header","dynamicTyping","skipEmptyLines","complete","results","length","readAsText","height","width","ResponsiveContainer","ScatterChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Scatter","fill","App","minHeight","maxWidth","fontWeight","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4RA8GeA,MAlGcA,KAC3B,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAUC,GAAeF,mBAAS,IAuBnCG,EAAkB,CACtBC,UAAW,CACTC,aAAc,OACdC,QAAS,OACTC,eAAgB,UAElBC,MAAO,CACLC,QAAS,YACTC,gBAAiB,UACjBC,MAAO,QACPC,aAAc,MACdC,OAAQ,UACRC,WAAY,wBACZR,QAAS,eACTS,UAAW,SACXC,UAAW,6BAEbC,MAAO,CACLX,QAAS,QAEXL,SAAU,CACRiB,UAAW,OACXP,MAAO,OACPQ,SAAU,OACVJ,UAAW,WAIf,OACEK,IAAAC,cAAA,OAAKC,MAAO,CAAEZ,gBAAiB,QAASD,QAAS,OAAQG,aAAc,MAAOI,UAAW,8BACvFI,IAAAC,cAAA,OAAKC,MAAOnB,EAAgBC,WAC1BgB,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOC,MAAOnB,EAAgBK,OAAO,kBAEnCY,IAAAC,cAAA,SACEE,KAAK,OACLC,OAAO,OACPC,SA1DcC,IACxB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChC,GAAIF,EAAM,CACRzB,EAAYyB,EAAKG,MACjB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,KACfC,IAAKC,MAAMF,EAAEN,OAAOS,OAAQ,CAC1BC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,SAAWC,IACLA,EAAQ5C,MAAQ4C,EAAQ5C,KAAK6C,OAAS,GACxC5C,EAAQ2C,EAAQ5C,WAKxBiC,EAAOa,WAAWjB,KA0CVL,MAAOnB,EAAgBc,SAG1BhB,GACCmB,IAAAC,cAAA,OAAKC,MAAOnB,EAAgBF,UAAU,kBACpBA,KAMvBH,EAAK6C,OAAS,GACbvB,IAAAC,cAAA,OAAKC,MAAO,CAAEuB,OAAQ,QAASC,MAAO,SACpC1B,IAAAC,cAAC0B,IAAmB,KAClB3B,IAAAC,cAAC2B,IAAY,CACXC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,KAGRjC,IAAAC,cAACiC,IAAa,CAACC,gBAAgB,QAC/BnC,IAAAC,cAACmC,IAAK,CAACjC,KAAK,SAASkC,QAAQ,MAC7BrC,IAAAC,cAACqC,IAAK,CAACnC,KAAK,SAASkC,QAAQ,MAC7BrC,IAAAC,cAACsC,IAAO,MACRvC,IAAAC,cAACuC,IAAO,CAAC9D,KAAMA,EAAM+D,KAAK,iBCrFzBC,MAbf,WACE,OACE1C,IAAAC,cAAA,OAAKC,MAAO,CAAEZ,gBAAiB,UAAWqD,UAAW,QAAStD,QAAS,SACrEW,IAAAC,cAAA,OAAKC,MAAO,CAAE0C,SAAU,SAAUf,OAAQ,WACxC7B,IAAAC,cAAA,MAAIC,MAAO,CAAEH,SAAU,OAAQ8C,WAAY,OAAQ5D,aAAc,SAAU,mBAG3Ee,IAAAC,cAACxB,EAAoB,SCHhBqE,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAACyC,EAAG","file":"static/js/main.62e7d510.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst ScatterPlotComponent = () => {\n  const [data, setData] = useState([]);\n  const [fileName, setFileName] = useState('');\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        Papa.parse(e.target.result, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            if (results.data && results.data.length > 0) {\n              setData(results.data);\n            }\n          }\n        });\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const fileInputStyles = {\n    container: {\n      marginBottom: '20px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    label: {\n      padding: '10px 20px',\n      backgroundColor: '#4a90e2',\n      color: 'white',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      transition: 'background-color 0.3s',\n      display: 'inline-block',\n      textAlign: 'center',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n    },\n    input: {\n      display: 'none'\n    },\n    fileName: {\n      marginTop: '10px',\n      color: '#666',\n      fontSize: '14px',\n      textAlign: 'center'\n    }\n  };\n\n  return (\n    <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' }}>\n      <div style={fileInputStyles.container}>\n        <div>\n          <label style={fileInputStyles.label}>\n            Choose CSV File\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileUpload}\n              style={fileInputStyles.input}\n            />\n          </label>\n          {fileName && (\n            <div style={fileInputStyles.fileName}>\n              Selected file: {fileName}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {data.length > 0 && (\n        <div style={{ height: '400px', width: '100%' }}>\n          <ResponsiveContainer>\n            <ScatterChart\n              margin={{\n                top: 20,\n                right: 20,\n                bottom: 20,\n                left: 20,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis type=\"number\" dataKey=\"x\" />\n              <YAxis type=\"number\" dataKey=\"y\" />\n              <Tooltip />\n              <Scatter data={data} fill=\"#4a90e2\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScatterPlotComponent;","import React from 'react';\nimport ScatterPlotComponent from './components/ScatterPlotComponent';\n\nfunction App() {\n  return (\n    <div style={{ backgroundColor: '#f3f4f6', minHeight: '100vh', padding: '20px' }}>\n      <div style={{ maxWidth: '1000px', margin: '0 auto' }}>\n        <h1 style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '20px' }}>\n          Data Visualizer\n        </h1>\n        <ScatterPlotComponent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n//import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}