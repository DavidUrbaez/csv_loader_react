{"version":3,"sources":["components/ScatterPlotComponent.jsx","App.js","index.js"],"names":["ScatterPlotComponent","data","setData","useState","fileName","setFileName","React","createElement","className","fill","xmlns","viewBox","d","type","accept","onChange","event","file","target","files","name","reader","FileReader","onload","e","Papa","parse","result","header","dynamicTyping","skipEmptyLines","complete","results","length","readAsText","style","height","ResponsiveContainer","width","ScatterChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","label","value","position","offset","YAxis","angle","Tooltip","content","_ref","active","payload","point","x","y","Scatter","stroke","strokeWidth","r","App","Date","getFullYear","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.94af2dc1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst ScatterPlotComponent = () => {\n  const [data, setData] = useState([]);\n  const [fileName, setFileName] = useState('');\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        Papa.parse(e.target.result, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            if (results.data && results.data.length > 0) {\n              setData(results.data);\n            }\n          }\n        });\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const point = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 rounded-lg shadow-lg border border-gray-200\">\n          <p className=\"font-semibold text-gray-700\">{point.label}</p>\n          <p className=\"text-sm text-gray-600\">X: {point.x}</p>\n          <p className=\"text-sm text-gray-600\">Y: {point.y}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Seleccionar archivo CSV\n        </label>\n        <div className=\"flex items-center justify-center w-full\">\n          <label className=\"w-full flex flex-col items-center px-4 py-6 bg-white rounded-lg shadow-lg tracking-wide border border-blue-500 cursor-pointer hover:bg-blue-500 hover:text-white transition-colors duration-200\">\n            <svg className=\"w-8 h-8\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n              <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n            </svg>\n            <span className=\"mt-2 text-base\">\n              {fileName || 'Seleccionar archivo'}\n            </span>\n            <input\n              type=\"file\"\n              accept=\".csv\"\n              className=\"hidden\"\n              onChange={handleFileUpload}\n            />\n          </label>\n        </div>\n      </div>\n\n      {data.length > 0 && (\n        <div className=\"mt-8\">\n          <div className=\"bg-gray-50 rounded-lg p-4\" style={{ height: '500px' }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ScatterChart\n                margin={{\n                  top: 20,\n                  right: 20,\n                  bottom: 20,\n                  left: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  type=\"number\"\n                  dataKey=\"x\"\n                  name=\"X\"\n                  label={{ value: 'Eje X', position: 'bottom', offset: 0 }}\n                />\n                <YAxis\n                  type=\"number\"\n                  dataKey=\"y\"\n                  name=\"Y\"\n                  label={{ value: 'Eje Y', angle: -90, position: 'insideLeft' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Scatter\n                  data={data}\n                  fill=\"#3b82f6\"\n                  stroke=\"#2563eb\"\n                  strokeWidth={1}\n                  r={6}\n                />\n              </ScatterChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScatterPlotComponent;","import React from 'react';\nimport ScatterPlotComponent from './components/ScatterPlotComponent';\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <nav className=\"bg-white shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <h1 className=\"text-2xl font-bold text-gray-800\">\n                  Visualización de Datos\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n        <div className=\"px-4 py-6 sm:px-0\">\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">\n              Gráfico de Dispersión\n            </h2>\n            <ScatterPlotComponent />\n          </div>\n        </div>\n      </main>\n\n      <footer className=\"bg-white shadow-lg mt-auto\">\n        <div className=\"max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8\">\n          <p className=\"text-center text-gray-500 text-sm\">\n            Creado con React y Recharts - {new Date().getFullYear()}\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}